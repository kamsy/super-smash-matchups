{"version":3,"sources":["serviceWorker.js","components/Cards/index.js","components/Slots/index.js","components/Stats/Stats.js","components/svg.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Cards","_ref","id","image","handler","name","filled","react_default","a","createElement","className","onClick","src","alt","Slot","_this$props","this","props","Component","Stats","slot1","slot2","universe","tier","air_speed","dash_speed","fall_speed","run_speed","weight","spirits","primary","slot_1","slot_2","slot_3","unlock","wofl","vs_mode","classic_mode","IconDownArrow","version","xmlns","x","y","width","height","viewBox","d","projectId","apiKey","authDomain","concat","databaseURL","storageBucket","firebase","initializeApp","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","listenToScroll","e","_this$state$keyArray","keyArray","key1","key2","statsScroll","_reactInternalFiber","child","stateNode","offsetTop","pageYOffset","setState","prevState","objectSpread","displayAnim","handleSelection","key","_prevState$keyArray","updateSlots","_prevState$keyArray2","slotsFilled","arr","char","character","status","fetched","_this2","storage","ref","_loop","getDownloadURL","url","newArr","toConsumableArray","addEventListener","removeEventListener","_this3","_this$state","characters","chars","i","length","push","components_Cards","toString","selectedCard","filter","card","selectedCard2","settings","infinite","speed","slidesToShow","slidesToScroll","focusOnSelect","responsive","breakpoint","renderStats","style","padding","lib_default","map","Slots","svg_IconDownArrow","components_Stats_Stats","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","caches","open","cache","addAll","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9e250d6e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            console.log(swUrl);\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                caches.open(\"ssmb-assets\").then(cache => {\n                    // do something with cache...\n\n                    console.log(\"cache opened in line 53 boss\", cache);\n                    return cache.addAll([\n                        \"/public/android-chrome-192x192.png\",\n                        \"/public/android-chrome-256x256.png\",\n                        \"/public/android-chrome-512x512.png\",\n                        \"/public/apple-touch-icon.png\",\n                        \"/public/favicon-16x16.png\",\n                        \"/public/favicon-32x32.png\",\n                        \"/public/safari-pinned-tab.svg\",\n                        \"/public/mstile-150x150.png\"\n                    ]);\n                });\n\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                console.log(\"i dey here\");\n                caches.open(\"ssmb-assets\").then(cache => {\n                    // do something with cache...\n\n                    console.log(\"cache opened in line 220 boss\", cache);\n                    return cache.addAll([\n                        \"/public/android-chrome-192x192.png\",\n                        \"/public/android-chrome-256x256.png\",\n                        \"/public/android-chrome-512x512.png\",\n                        \"/public/apple-touch-icon.png\",\n                        \"/public/favicon-16x16.png\",\n                        \"/public/favicon-32x32.png\",\n                        \"/public/safari-pinned-tab.svg\",\n                        \"/public/mstile-150x150.png\"\n                    ]);\n                });\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\n// From a page:\n// navigator.storage.requestPersistent().then(granted => {\n//     if (granted) {\n//         // Hurrah, your data is here to stay!\n//     }\n// });\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst Cards = ({ id, image, handler, name, filled }) => {\n    return (\n        <div\n            className={filled ? `card filled` : \"card\"}\n            onClick={filled ? null : () => handler(id)}\n        >\n            <div className={`card-content`}>\n                <img src={image} alt={name} />\n                <div className=\"card-body\">\n                    <span className=\"name\">{name}</span>\n                </div>\n            </div>\n            <div className={filled ? `overlay` : null} />\n        </div>\n    );\n};\n\nexport default Cards;\n","import React, { Component } from \"react\";\nimport \"./style.scss\";\n\nclass Slot extends Component {\n    render() {\n        const { id, name } = this.props;\n        return <div id={id}>{name}</div>;\n    }\n}\n\nexport default Slot;\n","import React, { Component } from \"react\";\nimport \"./style.scss\";\n\nclass Stats extends Component {\n    render() {\n        const { slot1, slot2 } = this.props;\n        return (\n            <div id=\"statistics\">\n                <div className=\"main-container stats\">\n                    <div className=\"row\">\n                        <span className=\"name\">Universe</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.universe}</span>\n                            <span className=\"results\">{slot2.universe}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Tier</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.tier}</span>\n                            <span className=\"results\">{slot2.tier}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Air Speed</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.air_speed}</span>\n                            <span className=\"results\">{slot2.air_speed}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Dash Speed</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.dash_speed}</span>\n                            <span className=\"results\">{slot2.dash_speed}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Fall Speed</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.fall_speed}</span>\n                            <span className=\"results\">{slot2.fall_speed}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Run Speed</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.run_speed}</span>\n                            <span className=\"results\">{slot2.run_speed}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Weight</span>\n                        <div className=\"result-cont\">\n                            <span className=\"results\">{slot1.weight}</span>\n                            <span className=\"results\">{slot1.weight}</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Best Spirit Combination</span>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Primary Slot</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.spirits[0].primary}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.spirits[0].primary}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Slot 1</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.spirits[1].slot_1}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.spirits[1].slot_1}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Slot 2</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.spirits[2].slot_2}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.spirits[2].slot_2}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Slot 3</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.spirits[3].slot_3}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.spirits[3].slot_3}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">How To Unlock</span>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">World of Light</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.unlock[0].wofl}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.unlock[0].wofl}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Versus Mode</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.unlock[2].vs_mode}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.unlock[2].vs_mode}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Classic Mode</div>\n                            <div className=\"result-cont\">\n                                <div className=\"results\">\n                                    {slot1.unlock[1].classic_mode}\n                                </div>\n                                <div className=\"results\">\n                                    {slot2.unlock[1].classic_mode}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"name\">Moves</span>\n                        <div className=\"row stat-box\">\n                            <div className=\"name\">Classic Mode</div>\n                            <div className=\"results\" />\n                            <div className=\"results\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nexport const IconDownArrow = () => {\n    return (\n        <svg\n            version=\"1.1\"\n            id=\"Capa_1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"24px\"\n            height=\"32px\"\n            viewBox=\"0 0 444.819 444.819\"\n        >\n            <g>\n                <path\n                    d=\"M434.252,185.721l-21.409-21.413c-7.419-7.042-16.084-10.564-25.975-10.564c-10.095,0-18.657,3.521-25.7,10.564\n\t\tl-83.938,83.939V47.255c0-9.9-3.621-18.464-10.855-25.697c-7.234-7.232-15.797-10.85-25.693-10.85h-36.545\n\t\tc-9.897,0-18.464,3.621-25.693,10.85c-7.236,7.233-10.85,15.797-10.85,25.697v200.992l-83.939-83.939\n\t\tc-7.042-7.042-15.606-10.564-25.697-10.564c-9.896,0-18.559,3.521-25.979,10.564l-21.128,21.413C3.615,192.948,0,201.615,0,211.7\n\t\tc0,10.282,3.619,18.848,10.848,25.698l185.864,186.146c7.045,7.046,15.609,10.567,25.697,10.567\n\t\tc9.897,0,18.558-3.521,25.977-10.567l185.865-186.146c7.043-7.043,10.567-15.608,10.567-25.698\n\t\tC444.819,201.805,441.295,193.145,434.252,185.721z\"\n                />\n            </g>\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n            <g />\n        </svg>\n    );\n};\n","import React, { Component } from \"react\";\n\nimport Cards from \"./components/Cards/index\";\nimport Slot from \"./components/Slots/index\";\nimport char from \"./data/characters.json\";\nimport Slider from \"react-slick\";\nimport \"./base.scss\";\nimport Stats from \"./components/Stats/Stats\";\nimport Spinner from \"./components/Spinner/Spinner\";\n\nimport firebase from \"firebase\";\nimport { IconDownArrow } from \"./components/svg\";\n\nconst projectId = \"super-smash-matchups\";\n\nvar config = {\n    apiKey: \"AIzaSyDUAeMJRPkI2Rn5cgujTRzWupryJmo-J4o\",\n    authDomain: `${projectId}.firebaseapp.com`,\n    databaseURL: `${projectId}.firebaseio.com`,\n    storageBucket: `${projectId}.appspot.com`\n};\nfirebase.initializeApp(config);\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slotsFilled: 0,\n            arr: char.character,\n            status: \"\",\n            keyArray: { key1: null, key2: null },\n            filled: false,\n            fetched: false,\n            displayAnim: false\n        };\n    }\n\n    componentDidMount() {\n        const { arr } = this.state;\n        const storage = firebase.storage().ref();\n\n        for (let key in arr) {\n            const storageRef = storage.child(`img/${arr[key].name}.png`);\n\n            storageRef\n                .getDownloadURL()\n                .then(url => {\n                    const newArr = [...arr];\n                    newArr[key].image = url;\n                    this.setState(prevState => {\n                        return {\n                            ...prevState,\n                            fetched: true,\n                            arr: newArr\n                        };\n                    });\n                })\n                .catch(function(error) {\n                    console.log({ error });\n                });\n        }\n\n        window.addEventListener(\"scroll\", this.listenToScroll);\n    }\n\n    listenToScroll = e => {\n        const { key1, key2 } = this.state.keyArray;\n        if (key1 !== null && key2 !== null) {\n            const statsScroll = this.Stats._reactInternalFiber.child.stateNode\n                .offsetTop;\n            if (window.pageYOffset > statsScroll) {\n                this.setState(prevState => {\n                    return { ...prevState, displayAnim: false };\n                });\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.listenToScroll);\n    }\n\n    handleSelection = key => {\n        this.setState(prevState => {\n            const { key1, key2 } = prevState.keyArray;\n            if (key1 !== key && key1 !== null && key2 === null) {\n                return {\n                    ...prevState,\n                    keyArray: { key1, key2: key },\n                    filled: true,\n                    displayAnim: true\n                };\n            } else if (key1 !== null && key2 !== null) {\n                return {\n                    ...prevState,\n                    keyArray: { key1, key2 },\n                    filled: true,\n                    displayAnim: true\n                };\n            } else if (key2 !== key && key2 !== null && key1 === null) {\n                return {\n                    ...prevState,\n                    keyArray: { key1: key, key2 },\n                    filled: true,\n                    displayAnim: true\n                };\n            } else if (key1 === null) {\n                return {\n                    ...prevState,\n                    keyArray: { key1: key, key2: null },\n                    filled: false\n                };\n            }\n            return;\n        });\n    };\n\n    updateSlots = key => {\n        this.setState(prevState => {\n            const { key1, key2 } = prevState.keyArray;\n            if (key1 === key) {\n                return {\n                    ...prevState,\n                    keyArray: { key1: null, key2 },\n                    filled: false\n                };\n            }\n            return {\n                ...prevState,\n                keyArray: { key2: null, key1 },\n                filled: false\n            };\n        });\n    };\n\n    render() {\n        const { arr, keyArray, filled, fetched, displayAnim } = this.state;\n        let characters = [];\n        let chars = [];\n\n        for (let i = 0; i < arr.length; i++) {\n            characters.push(\n                <Cards\n                    key={arr[i].name.toString()}\n                    id={i}\n                    name={arr[i].name}\n                    handler={this.handleSelection}\n                    image={arr[i].image}\n                    filled={filled}\n                />\n            );\n            chars.push(\n                <Cards\n                    key={arr[i].name.toString()}\n                    id={i}\n                    name={arr[i].name}\n                    handler={this.updateSlots}\n                    image={arr[i].image}\n                />\n            );\n        }\n\n        let selectedCard = \"\";\n        if (keyArray.key1 !== null) {\n            // eslint-disable-next-line\n            selectedCard = chars.filter(card => {\n                if (card.props.id === keyArray.key1) {\n                    return card;\n                }\n            });\n        }\n        let selectedCard2 = \"\";\n        if (keyArray.key2 !== null) {\n            // eslint-disable-next-line\n            selectedCard2 = chars.filter(card => {\n                if (card.props.id === keyArray.key2) {\n                    return card;\n                }\n            });\n        }\n\n        const settings = {\n            infinite: true,\n            speed: 300,\n            slidesToShow: 5,\n            slidesToScroll: 5,\n            focusOnSelect: filled ? false : true,\n            responsive: [\n                {\n                    breakpoint: 1540,\n                    settings: {\n                        slidesToShow: 4,\n                        slidesToScroll: 4\n                    }\n                },\n                {\n                    breakpoint: 1024,\n                    settings: {\n                        slidesToShow: 3,\n                        slidesToScroll: 3\n                    }\n                },\n                {\n                    breakpoint: 860,\n                    settings: {\n                        slidesToShow: 2,\n                        slidesToScroll: 2\n                    }\n                },\n                {\n                    breakpoint: 520,\n                    settings: {\n                        slidesToShow: 1,\n                        slidesToScroll: 1\n                    }\n                }\n            ]\n        };\n\n        const renderStats = keyArray.key1 !== null && keyArray.key2 !== null;\n\n        return (\n            <div>\n                <header>\n                    <div className=\"main-container\">\n                        <h2>Super Smash Bros Matchups</h2>\n                    </div>\n                </header>\n                <div className=\"main-container images\">\n                    <p>\n                        Compare characters from the Super Smash Bros. Ultimate\n                        character list\n                    </p>\n                    <h2>Choose two characters:</h2>\n                    <div style={{ padding: \"30px\" }}>\n                        <Slider {...settings}>\n                            {characters.map(character => {\n                                return (\n                                    <div\n                                        className=\"characters\"\n                                        key={character.props.id}\n                                    >\n                                        {character}\n                                    </div>\n                                );\n                            })}\n                        </Slider>\n                    </div>\n                    <div className=\"slots\">\n                        <h2>Selected Characters:</h2>\n                        {keyArray.key1 !== null || keyArray.key2 !== null ? (\n                            <p>Click on a slot to remove a character</p>\n                        ) : null}\n                        <Slot name={selectedCard} id=\"slot-1\" />\n                        <Slot name={selectedCard2} id=\"slot-2\" />\n                    </div>\n                    {renderStats && displayAnim ? (\n                        <div className=\"arrow bounce\">\n                            <IconDownArrow />\n                        </div>\n                    ) : null}\n                </div>\n\n                {renderStats ? (\n                    <Stats\n                        ref={ref => (this.Stats = ref)}\n                        slot1={arr[keyArray.key1]}\n                        slot2={arr[keyArray.key2]}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}